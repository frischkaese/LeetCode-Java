Determine whether an integer is a palindrome. Do this without extra space.


public class Solution {
    public boolean isPalindrome(int x) {
        if(x<0){
            return false;
        }
        
        int revInt=reverse(x);
        if(x==revInt){
            return true;
        }else{
            return false;
        }
    }
    
    public int reverse(int x){
        long result=0;
        while(x>0){
            int rest=x%10;
            x=x/10;
            result=result*10+rest;
        }
        if(result>Integer.MAX_VALUE){
            return 0;
        }else{
            return (int) result;
        }
    }
}


Another better solution:

public class Solution {
    private static final int maxBit = (int)Math.floor(Math.log10(Integer.MAX_VALUE));
    public boolean isPalindrome(int x) {
        if(x < 0){return false;}
        if(x == 0){return true;}
        int i = 0,j = maxBit;
        while(x / (int)Math.pow(10,j) == 0){j--;}
        while(i < j){
            if((x % (int)Math.pow(10,i+1) - x % (int)Math.pow(10,i))/(int)Math.pow(10,i) != x / (int)Math.pow(10,j)){return false;}
            x = x % (int)Math.pow(10,j);
            i++;
            j--;
        }
        return true;
    }
}
