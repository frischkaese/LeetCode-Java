Implement regular expression matching with support for '.' and '*'.

'.' Matches any single character.
'*' Matches zero or more of the preceding element.

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true


public class Solution {
    public boolean isMatch(String s, String p) {
        if(p.contains(".") || p.contains("*")){
            if(p.length()==1 || p.charAt(1)!='*'){
                return compare(s,p,s.length(),0) && isMatch(s.substring(1),p.substring(1));
            }
            for(int i=0; i==0 || compare(s,p,s.length(),i-1); i++){
                if(isMatch(s.substring(i),p.substring(2))){
                    return true;
                }
            }
        }
        return s.equals(p);
    }
    
    public boolean compare(String s, String p, int sLen, int i){
        return sLen>i && (p.charAt(0)==s.charAt(i) || p.charAt(0)=='.');
    }
}
